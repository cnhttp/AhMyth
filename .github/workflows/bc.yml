name: Build AhMyth APK

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用确定的版本

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 必须使用v4

      # 设置JDK环境
      - name: Set up JDK 17
        uses: actions/setup-java@v4  # 升级到v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 更可靠的Android SDK安装方式
      - name: Install Android SDK
        run: |
          mkdir -p ~/android-sdk
          cd ~/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-*.zip
          export ANDROID_HOME=~/android-sdk
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/bin
          yes | sdkmanager --install "platform-tools" "platforms;android-30" "build-tools;30.0.3"
          sdkmanager --licenses --sdk_root=${ANDROID_HOME}

      # 切换回JDK8用于编译
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'

      # 使用最新版cache
      - name: Cache Gradle
        uses: actions/cache@v4  # 必须使用v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('​**​/*.gradle*', '​**​/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission to gradlew
        run: chmod +x ./AhMyth-Client/android/gradlew

      - name: Build APK
        working-directory: ./AhMyth-Client/android
        run: ./gradlew assembleRelease

      # 使用最新版upload-artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4  # 必须使用v4
        with:
          name: AhMyth-APK
          path: ./AhMyth-Client/android/app/build/outputs/apk/release/*.apk
